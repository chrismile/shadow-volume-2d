cmake_minimum_required (VERSION 2.6)
project (sv2d)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMake)
#MESSAGE(STATUS "CMAKE_MODULE_PATH: " ${CMAKE_MODULE_PATH})

set (CMAKE_CXX_STANDARD 11)

file(GLOB_RECURSE SOURCES src/*.cpp src/*.c)
IF(WIN32)
	add_executable(sv2d WIN32 ${SOURCES})
ELSE()
	add_executable(sv2d ${SOURCES})
ENDIF()
include_directories(src)

#make VERBOSE=1

IF(WIN32)
	SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mwindows")
	target_link_libraries(sv2d mingw32 SDL2main SDL2)
ELSE()
	target_link_libraries(sv2d SDL2)
ENDIF()

cmake_policy(SET CMP0012 NEW)
find_package(SGL REQUIRED)
find_package(Boost COMPONENTS system filesystem REQUIRED)
IF(WIN32)
	target_link_libraries(sv2d boost_system-mt)
	target_link_libraries(sv2d boost_filesystem-mt)
	target_link_libraries(sv2d opengl32)
	target_link_libraries(sv2d glew32)
ELSE()
	target_link_libraries(sv2d boost_system)
	target_link_libraries(sv2d boost_filesystem)
	target_link_libraries(sv2d GL)
	target_link_libraries(sv2d GLEW)
ENDIF()
target_link_libraries(sv2d ${SGL_LIBRARIES})
